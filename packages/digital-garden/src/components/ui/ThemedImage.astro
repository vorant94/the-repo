---
import { getImage } from "astro:assets";
import type { ImageMetadata } from "astro";
import type { HTMLAttributes } from "astro/types";

export interface Props extends Omit<HTMLAttributes<"img">, "src"> {
  src: ImageMetadata;
  srcDark?: ImageMetadata | null;
}

const { srcDark, src, alt, ...rest } = Astro.props;

const optimized = await getImage({ src, format: "webp" });
const optimizedDark =
  srcDark && (await getImage({ src: srcDark, format: "webp" }));
---

<picture>
	{optimizedDark && (
		<source
			srcset={optimizedDark.src}
			media="(prefers-color-scheme:dark)"
		/>
	)}
	<!-- cannot use here Astro Image component, since it causes TS to fail on passing ...rest props -->
	<img
		src={optimized.src}
		alt={alt}
		{...rest}
	/>
</picture>
