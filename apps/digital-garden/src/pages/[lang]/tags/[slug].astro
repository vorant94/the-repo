---
import { getCollection } from "astro:content";
import PostList from "../../../components/PostList.astro";
import PostListItem from "../../../components/PostListItem.astro";
import { languages } from "../../../i18n/ui";
import DefaultLayout from "../../../layouts/DefaultLayout.astro";
import {
  type PostModel,
  sortPostsByPublishedAt,
  type TagModel,
} from "../../../utils/content.helpers";

export async function getStaticPaths() {
  const [tags, allPosts] = await Promise.all([
    getCollection("tags"),
    getCollection("posts"),
  ]);

  const sortedPosts = sortPostsByPublishedAt(allPosts);

  return languages.flatMap((lang) => {
    const langPosts = sortedPosts.filter((post) => {
      const [postLang] = post.id.split("/");
      return lang === postLang;
    });

    return tags
      .map((tag) => {
        const tagLangPosts = langPosts.filter(({ data }) =>
          data.tags.find(({ id }) => id === tag.id),
        );

        if (tagLangPosts.length === 0) {
          return null;
        }

        return {
          params: { slug: tag.id, lang },
          props: {
            tag,
            tagPosts: tagLangPosts,
          },
        };
      })
      .filter(Boolean);
  });
}

export interface Props {
  tag: TagModel;
  tagPosts: Array<PostModel>;
}

const { tag, tagPosts } = Astro.props;
---

<DefaultLayout title={`${tag.id} posts`}>
	<PostList>
		<span
			transition:name={`tag.${tag.data.id}`}
			slot="title"
		>
			{`#${tag.id}`}
		</span>

		{tagPosts.map((post) => (
			<PostListItem post={post} />
		))}
	</PostList>
</DefaultLayout>
