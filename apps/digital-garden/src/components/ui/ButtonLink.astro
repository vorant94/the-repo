---
import type { HTMLAttributes } from "astro/types";

export const buttonLinkVariants = ["default", "outlined"] as const;
export type ButtonLinkVariant = (typeof buttonLinkVariants)[number];
const buttonLinkVariantToStyle = {
  default: "",
  outlined:
    "border rounded-2xl hover:outline outline-cyan-500 hover:border-cyan-500",
} as const satisfies Record<ButtonLinkVariant, string>;

export const buttonLinkSizes = ["md", "sm"] as const;
export type ButtonLinkSize = (typeof buttonLinkSizes)[number];
const buttonLinkSizeToStyles = {
  sm: "text-sm font-light",
  md: "",
} as const satisfies Record<ButtonLinkSize, string>;

export interface Props extends HTMLAttributes<"a"> {
  variant?: ButtonLinkVariant;
  size?: ButtonLinkSize;
}

const {
  variant = "default",
  size = "md",
  class: className,
  href,
  ...rest
} = Astro.props;
---
<a
	class:list={[
		"p-1 hover:text-cyan-500",
		buttonLinkVariantToStyle[variant],
		buttonLinkSizeToStyles[size],
		className
	]}
	href={href}
	data-astro-prefetch
	{...rest}>
	<slot />
</a>
